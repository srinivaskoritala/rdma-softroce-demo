RDMA/RoCEv2 Connection Establishment Flow Diagram
==================================================

Client                    Server
------                    ------
  |                         |
  |-- Device Discovery ---->|
  |   (Port 4791)           |
  |                         |
  |<-- Device Response -----|
  |   (Capabilities)        |
  |                         |
  |-- QP Create Request --->|
  |   (QP Parameters)       |
  |                         |
  |<-- QP Create Response --|
  |   (QP Numbers)          |
  |                         |
  |-- MR Register Request ->|
  |   (Memory Regions)      |
  |                         |
  |<-- MR Register Response |
  |   (Memory Keys)         |
  |                         |
  |-- Connection Request -->|
  |   (Connection Params)   |
  |                         |
  |<-- Connection Accept ---|
  |   (Connection Accept)   |
  |                         |
  |-- Connection Confirm -->|
  |   (Connection Ready)    |
  |                         |
  |<-- Connection Ready ----|
  |   (RTS State)           |
  |                         |
  |-- RDMA Write ---------->|
  |   (Data Transfer)       |
  |                         |
  |<-- ACK ----------------|
  |   (Acknowledgment)      |
  |                         |

Queue Pair State Transitions:
=============================

RESET -> INIT -> RTR -> RTS -> ERROR
  |      |      |      |       |
  |      |      |      |       |
  +------+------+------+-------|
         |      |      |       |
         |      |      |       |
         +------+------+-------|
                |      |       |
                |      |       |
                +------+-------|
                       |       |
                       |       |
                       +-------|
                               |
                               |
                               +

State Descriptions:
===================
RESET: QP is not initialized
INIT:  QP is created but not configured
RTR:   Ready to Receive (configured, waiting for connection)
RTS:   Ready to Send (connected, ready for data transfer)
ERROR: Error condition occurred

Connection Establishment Phases:
===============================

Phase 1: Device Discovery
  - Client discovers available RDMA devices
  - Server responds with device capabilities
  - Both sides exchange supported features
  - Traffic: Small packets (68-100 bytes)

Phase 2: Queue Pair Creation
  - Client creates Queue Pair (QP)
  - Server creates corresponding QP
  - QP parameters are negotiated
  - Traffic: Medium packets (100-200 bytes)

Phase 3: Memory Region Registration
  - Client registers memory regions
  - Server registers memory regions
  - Memory keys are exchanged
  - Traffic: Medium packets (100-200 bytes)

Phase 4: Connection Establishment
  - Client initiates connection
  - Server accepts connection
  - QP state transitions occur
  - Traffic: Small packets (68-100 bytes)

Phase 5: Data Transfer Operations
  - Connection is ready for RDMA operations
  - Data transfer begins
  - Traffic: Large packets (1KB-2GB)

Performance Characteristics:
===========================

Latency Breakdown:
  Device Discovery:     1-5 ms
  QP Creation:          0.1-1 ms
  Memory Registration:  0.1-0.5 ms
  Connection Establishment: 0.1-1 ms
  Total:                1.3-7.5 ms

Bandwidth Usage:
  Discovery Phase:      < 1 Kbps
  Setup Phase:          < 10 Kbps
  Connection Phase:     < 1 Kbps
  Data Phase:           10-100 Gbps

CPU Usage:
  Discovery Phase:      < 1%
  Setup Phase:          < 5%
  Connection Phase:     < 1%
  Data Phase:           5-30%

Connection Types:
================

RC (Reliable Connection):
  - Guaranteed delivery and ordering
  - Connection-oriented
  - Full connection establishment required
  - Best for: Critical data transfers

UC (Unreliable Connection):
  - No delivery guarantees, maintains ordering
  - Connection-oriented
  - Simplified connection establishment
  - Best for: High-performance streaming

UD (Unreliable Datagram):
  - Datagram-based, no connection state
  - Connectionless
  - No connection establishment needed
  - Best for: Multicast, discovery

XRC (eXtended Reliable Connection):
  - Shared receive queues
  - Connection-oriented
  - Extended connection establishment
  - Best for: Scalable applications

Traffic Capture Commands:
========================

Monitor Connection Establishment:
  sudo tcpdump -i eth0 port 4791

Filter Connection Messages:
  sudo tcpdump -i eth0 'port 4791 and udp[20:4] = 0x04'

Monitor QP State:
  ibv_devinfo -d rxe0
  ibstat rxe0

Monitor Memory Regions:
  cat /sys/class/infiniband/rxe0/ports/1/pkeys
  cat /sys/class/infiniband/rxe0/ports/1/gids

Monitor Connections:
  netstat -ulnp | grep 4791
  ss -ulnp | grep 4791
